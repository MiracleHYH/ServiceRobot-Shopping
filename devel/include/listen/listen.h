// Generated by gencpp from file listen/listen.msg
// DO NOT EDIT!


#ifndef LISTEN_MESSAGE_LISTEN_H
#define LISTEN_MESSAGE_LISTEN_H

#include <ros/service_traits.h>


#include <listen/listenRequest.h>
#include <listen/listenResponse.h>


namespace listen
{

struct listen
{

typedef listenRequest Request;
typedef listenResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct listen
} // namespace listen


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::listen::listen > {
  static const char* value()
  {
    return "eb13ac1f1354ccecb7941ee8fa2192e8";
  }

  static const char* value(const ::listen::listen&) { return value(); }
};

template<>
struct DataType< ::listen::listen > {
  static const char* value()
  {
    return "listen/listen";
  }

  static const char* value(const ::listen::listen&) { return value(); }
};


// service_traits::MD5Sum< ::listen::listenRequest> should match
// service_traits::MD5Sum< ::listen::listen >
template<>
struct MD5Sum< ::listen::listenRequest>
{
  static const char* value()
  {
    return MD5Sum< ::listen::listen >::value();
  }
  static const char* value(const ::listen::listenRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::listen::listenRequest> should match
// service_traits::DataType< ::listen::listen >
template<>
struct DataType< ::listen::listenRequest>
{
  static const char* value()
  {
    return DataType< ::listen::listen >::value();
  }
  static const char* value(const ::listen::listenRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::listen::listenResponse> should match
// service_traits::MD5Sum< ::listen::listen >
template<>
struct MD5Sum< ::listen::listenResponse>
{
  static const char* value()
  {
    return MD5Sum< ::listen::listen >::value();
  }
  static const char* value(const ::listen::listenResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::listen::listenResponse> should match
// service_traits::DataType< ::listen::listen >
template<>
struct DataType< ::listen::listenResponse>
{
  static const char* value()
  {
    return DataType< ::listen::listen >::value();
  }
  static const char* value(const ::listen::listenResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // LISTEN_MESSAGE_LISTEN_H
